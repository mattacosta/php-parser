name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        php-version: [7_4, 7_3, 7_2, 7_1, 7_0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache NPM modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Build and run code generator
        run: npx gulp run-codegen
      - name: Build tests
        run: npm run pretest
      - name: Run tests
        run: npm run test:nyc
        env:
          CI: true
          PHP_PARSER_VERSION: ${{ matrix.php-version }}
      - name: Generate lcov report
        run: npm run test:nyc:report
      - name: Report coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: test (${{ matrix.node-version }}, ${{ matrix.php-version }})
          parallel: true

  coveralls:

    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Finalize coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  eslint:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm ci
      - name: Run eslint
        run: npm run eslint
